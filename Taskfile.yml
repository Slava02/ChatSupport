version: '3'

silent: true

vars:
  GO_MODULE: github.com/Slava02/ChatSupport
  GO_FILES:
    sh: find . -type f -name '*.go' -not -path "./vendor/*" -not -path "*.gen.go" | tr "\n" " "

  GOLANGCI_LINT_VERSION: v1.62.2
  GOLANGCI_LINT_CACHE:
    sh: echo "$HOME/Library/Caches"

  DEV_TOOLS: |
    github.com/daixiang0/gci@v0.13.5
    github.com/kazhuravlev/options-gen/cmd/options-gen@v0.33.1
    mvdan.cc/gofumpt@v0.7.0

  DOCKER_COMPOSE_PATHS: |
    ./deploy/local/docker-compose.yml
    ./deploy/local/docker-compose.sentry.yml

  DOCKER_COMPOSE_CMD: docker compose -f {{ .DOCKER_COMPOSE_PATHS | trim | splitLines | join " -f " }}


tasks:
  default:
    cmds:
      - task: tidy
      - task: fmt
      - task: lint
      - task: tests
      - task: build

  tidy:
    - echo "- Tidy"
    - go mod tidy
    - task: vendor

  vendor:
    - echo "- Vendor"
    - go mod vendor

  fmt:
    - echo "- Format"
    - gofumpt -w {{.GO_FILES}}
    - gci write -s standard -s default -s "prefix({{.GO_MODULE}})" --skip-generated {{.GO_FILES}}

  lint:
    cmds:
      - echo "- Lint"
      - mkdir -p {{.GOLANGCI_LINT_CACHE}}
      - task: lint:cmd
        vars: {CLI_ARGS: "run -v --fix --timeout=5m ./..."}

  lint:cmd:
    cmds:
      - |
        docker run --rm \
          -v "$(pwd):/app" -w /app \
          -v "{{.GOLANGCI_LINT_CACHE}}:/root/.cache" \
          golangci/golangci-lint:{{.GOLANGCI_LINT_VERSION}} \
          golangci-lint {{.CLI_ARGS}}
  tests:
    cmds:
      - echo "- Tests"
      - go test -race ./...

  build:
    cmds:
      - echo "- Build"
      - go build ./cmd/chat-service

  dev-tools:install:
    cmds:
      - echo "- Install dev tools"
      - |
        {{ range $tool := .DEV_TOOLS | trim | splitLines -}}
        go install {{ $tool }}
        {{ end }}
  generate:
    - echo "Run go generate..."
    - go generate ./...

  deps:
    vars: {CLI_ARGS: "--profile sentry"}
    cmds:
      - echo "- Starting dependencies"
      - "{{.DOCKER_COMPOSE_CMD}} {{.CLI_ARGS}} up -d"
      - task: deps


  deps:cmd:
    cmds:
      - "{{.DOCKER_COMPOSE_CMD}} {{.CLI_ARGS}}"

  deps:status:
    cmds:
      - "{{.DOCKER_COMPOSE_CMD}} ps"

  deps:logs:
    cmds:
      - "{{.DOCKER_COMPOSE_CMD}} logs {{.SERVICE}}"

  deps:stop:
    vars: {CLI_ARGS: "--profile sentry"}
    cmds:
      - echo "- Stopping running services"
      - "{{.DOCKER_COMPOSE_CMD}} {{.CLI_ARGS}} stop"

  deps:reset-psql:
    cmds:
      - task: deps:reset
        vars:
          SERVICE: postgres

  deps:reset-sentry:
    cmds:
      - task: deps:reset
        vars:
          SERVICE: sentry sentry-worker cron redis

  deps:reset:
    cmds:
      - "{{.DOCKER_COMPOSE_CMD}} rm -fsv {{.SERVICE}}"
      - "{{.DOCKER_COMPOSE_CMD}} up -d {{.SERVICE}}"
